{"version":3,"sources":["components/app-info/app-info.js","components/search-panel/search-panel.js","action/index.js","components/app-filter/app-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/todo-add-form/todo-add-form.js","components/app/app.js","reducer/index.js","index.js"],"names":["connect","state","data","posts","length","important","filter","item","urgent","completed","className","SearchPanel","props","onUpdateSearch","e","search","target","value","setState","searchPost","type","placeholder","this","onChange","Component","mapDispatchToProps","newSearch","payload","AppFilter","buttonsArr","name","label","term","buttons","map","clazz","onClick","filtered","TodoListItem","body","deletePost","addImportantPost","addUrgentPost","toComplete","preventDefault","title","id","filterPost","activeFilter","filterArr","arr","toLowerCase","includes","elements","renderDataList","console","log","TodoAddForm","onValueChange","post","addNewPost","newPost","Date","addToForm","App","initialState","reducer","action","itemIndex","findIndex","slice","idx","itemImportant","old","newImportant","newArr","inx","itemUrgent","oldItem","newUrgent","newArray","idc","itemCompleted","oldCompleted","newCompleted","newArrayCompleted","filtr","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.537f9f7b.chunk.js","sourcesContent":["import {connect} from 'react-redux'\nimport \"./app-info.css\";\n\nconst AppInfo = ({data}) => {\n    const posts = data.length;\n    const important = data.filter(item => item.important).length;\n    const urgent = data.filter(item => item.urgent).length\n    const completed = data.filter(item => item.completed).length\n    return (\n        <div className=\"app-info\">\n            <h2>Общее число записей: {posts}</h2>\n            <h6>Важные: {important}</h6>\n            <h6>Срочные: {urgent}</h6>\n            <h6>Выполненые: {completed}</h6>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => {\n    return{\n        data: state.data\n    }\n}\n\nexport default connect(mapStateToProps)(AppInfo);","import './search-panel.css';\nimport {connect} from 'react-redux';\nimport {searchPost} from '../../action'\nimport { Component } from 'react';\n\n\nclass SearchPanel extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            search: ''\n        }\n    }\n\n    onUpdateSearch = (e) => {\n        const search = e.target.value\n        this.setState({\n            search\n        });\n        this.props.searchPost(search)\n    }\n  \n    render() {\n \n        return (\n            <>\n            <input type=\"text\"\n                    className=\"form-control search-input\"\n                    placeholder=\"Найти запись\"\n                    value={this.state.search}\n                    onChange={this.onUpdateSearch}/>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        search: state.search\n    }\n}\nconst mapDispatchToProps = {\n    searchPost\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPanel);","export const importantPost = () => {\n    return {\n        type: 'IMPORTANT_POST'\n    }\n}\n\nexport const addToForm = (newPost) => {\n    return {\n        type: 'ADD_TO_FORM',\n        payload: newPost\n    }\n}\nexport const deletePost = (id) => {\n    return {\n        type: 'DELETE_POST',\n        payload: id\n    }\n}\nexport const addImportantPost = (id) => {\n    return {\n        type: 'ADD_IMPORTANT_POST',\n        payload: id\n    }\n}\nexport const addUrgentPost = (id) => {\n    return {\n        type: 'ADD_URGENT_POST',\n        payload: id\n    }\n}\nexport const toComplete = (id) => {\n    return {\n        type: 'TO_COMPLETE',\n        payload: id\n    }\n}\nexport const searchPost = (newSearch) => {\n    return {\n        type: 'SEARCH_POST',\n        payload: newSearch\n    }\n}\nexport const filtered = (term) => {\n    return {\n        type: 'FILTERED',\n        payload: term\n    }\n}\n","import {connect} from 'react-redux';\nimport {filtered} from '../../action'\nimport { Component} from 'react';\nimport \"./app-filter.css\";\n\n\nclass AppFilter extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            buttonsArr: [\n                {name: 'all', label: 'Все записи'},\n                {name: 'important', label: 'Важные'},\n                {name: 'urgent', label: 'Срочные'}\n            ],\n            term: 'all'\n        }\n    }\n\n   \n   render(){\n    const {filter} = this.props\n    const buttons = this.state.buttonsArr.map(({name, label}) => {\n        const active = filter === name;\n        const clazz = active ? 'btn-light' : 'btn-outline-light'\n        return(\n            <button key={name} \n                type=\"button\"  \n                onClick={() => this.props.filtered(name)}\n                //onClick={() => this.props.filtered(name)}\n                className={`btn ${clazz}`}>\n                {label}\n            </button>\n        )\n    })\n    return (\n        <div className=\"btn-group\">\n            {buttons}\n        </div>\n    )\n   }\n}\nconst mapStateToProps = (state) => {\n    return {\n        filter: state.filter\n    }\n}\nconst mapDispatchToProps = {\n    filtered\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AppFilter);","import './todo-list-item.css';\n\nconst TodoListItem = (props) => {\n\n    const {body, important, urgent, completed, deletePost, addImportantPost, addUrgentPost, toComplete} = props;\n\n    let classNames = ' increase'\n    let urgentClass = ' urgent'\n    let completedClass = ' completed'\n    return (\n        <li className={`list-group-item d-flex justify-content-between ${important ? classNames : null} ${urgent ? urgentClass : null} ${completed ? completedClass : null}`} >\n            <button type=\"button\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        toComplete();\n                    }}\n                    className=\"btn-completed btn-sm \"\n                    title=\"Отметить как выполненно\">\n                        <i className=\"fas fa-check\"></i>\n                </button>\n            <span className=\"list-group-item-label\">{body}</span>\n            <div className='d-flex justify-content-center align-items-center'>\n                <button type=\"button\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        addImportantPost();\n                    }}\n                    className=\"btn-cookie btn-sm \"\n                    title=\"Отметить как важное\">\n                        <i className=\"fas fa-star\"></i>\n                </button>\n\n                <button onClick={(e) => {\n                    e.preventDefault();\n                    deletePost();\n                }}\n                        type=\"button\"\n                        title=\"Удалить елемент\"\n                        className=\"btn-trash btn-sm \">\n                    <i className=\"fas fa-trash\"></i>\n                </button>\n                <button onClick={(e) => {\n                    e.preventDefault();\n                    addUrgentPost();\n                }}\n                        type=\"button\"\n                        title=\"Отметить как срочное\"\n                        className='btn-ungent btn-sm'>\n                <i className=\"fas fa-exclamation\"></i>\n                </button>\n\n            </div>\n        </li>\n    )\n}\n\n\n\n\nexport default TodoListItem;","import TodoListItem from \"../todo-list-item/todo-list-item\";\nimport {connect} from 'react-redux';\nimport {deletePost, addImportantPost, addUrgentPost, toComplete} from '../../action'\n\nimport './todo-list.css';\n\nconst TodoList = ({data, filter, search, addImportantPost, deletePost, addUrgentPost, toComplete, filterArr, activeFilter}) => {\n\n        let arr \n        if (activeFilter === 'all'){\n            arr = data\n        }\n        if (activeFilter === 'important'){\n            arr = data.filter(item => item.important)\n        }\n        if (activeFilter === 'urgent'){\n            arr = data.filter(item => item.urgent)\n        }\n        if(search.length > 0 ){\n            arr = data.filter(item => item.body.toLowerCase().includes(search.toLowerCase()))\n        }\n\n\n        const renderDataList = (arr) => {\n            if(arr.length <= 0){\n                return <div className='list'>Список пустой</div>\n            }\n \n            return arr.map((item) => {\n                return (\n                    <TodoListItem key={item.id} {...item} \n                    deletePost={() => deletePost(item.id)}\n                    addImportantPost={() => addImportantPost(item.id)}\n                    addUrgentPost={() => addUrgentPost(item.id)}\n                    toComplete ={() => toComplete(item.id)}/>\n                )\n            })\n        }\n    \n        const elements = renderDataList(arr);\n    \n \nconsole.log(filterArr);\n    return (\n        <ul className=\"app-list list-group\">\n            { elements } \n        </ul>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.data,\n        filter: state.filterPost,\n        search: state.search,\n        activeFilter: state.filter,\n        filterArr: state.filterArr\n    }\n}\nconst mapDispatchToProps = {\n    deletePost,\n    addImportantPost,\n    addUrgentPost,\n    toComplete\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","import './todo-add-form.css';\nimport {connect} from 'react-redux';\nimport {addToForm} from '../../action';\nimport {Component} from 'react'\n\nclass TodoAddForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            post: ''\n        }\n    }\n\n   onValueChange = (e) => {\n        this.setState({\n            post: e.target.value\n        })\n    }\n   \n    addNewPost = (post) => {\n        const newPost = {\n            body: post,\n            important: false,\n            urgent: false,\n            id: new Date()\n        }\n        this.setState({\n            post: ''\n        })\n        if(newPost.body.length > 0){\n            return this.props.addToForm(newPost);\n        } \n    }\n    \n    render () {\n        const {post} = this.state;\n        return (\n            <div className=\"app-add-form\">\n                <h3>Добавьте новую запись</h3>\n                <form\n                    className=\"add-form d-flex\">\n                    <input type=\"text\"\n                        className=\"form-control new-post-label\"\n                        placeholder=\"Добавте новую запись\" \n                        value={post}\n                        onChange={this.onValueChange}/>\n                    <button  \n                        type=\"submit\"\n                        onClick = {(e) => {\n                            e.preventDefault();\n                            this.addNewPost(post);\n                        } } \n                        className=\"btn btn-outline-light\">Добавить</button>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return{\n        data: state.data\n    }\n    \n}\nconst mapDispatchToProps = {\n    addToForm\n    }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoAddForm);","import AppInfo from '../app-info/app-info';\nimport SearchPanel from '../search-panel/search-panel';\nimport AppFilter from '../app-filter/app-filter';\nimport TodoList from '../todo-list/todo-list';\nimport TodoAddForm from '../todo-add-form/todo-add-form';\n\nimport './app.css';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <AppInfo />\n\n        <div className=\"search-panel\">\n            <SearchPanel/>\n            <AppFilter/>\n        </div>\n        \n        <TodoList/>\n        <TodoAddForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    data: [\n        {body: 'First post', id: 1, important: false, urgent: false, completed: false},\n        {body: 'it is a greeting', id: 2, important: true, urgent: false, completed: false}\n    ],\n    search: '',\n    filterPost: [],\n    filter: 'all',\n    filterArr: []\n\n}\nconst reducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case 'ADD_TO_FORM':\n            const newPost = action.payload;\n            return {\n                ...state,\n                data: [\n                    ...state.data,\n                    newPost\n                ]\n            }\n        case 'DELETE_POST':\n            const id = action.payload;\n            const itemIndex = state.data.findIndex(item => item.id === id)\n            return {\n                ...state,\n                data: [\n                    ...state.data.slice(0, itemIndex),\n                    ...state.data.slice(itemIndex + 1)\n                ]\n            }\n        case 'ADD_IMPORTANT_POST':\n            const idx = action.payload;\n            const itemImportant = state.data.findIndex(item => item.id === idx)\n            const old = state.data[itemImportant]\n            const newImportant = {...old, important: !old.important};\n            const newArr = [\n                ...state.data.slice(0, itemImportant), newImportant, ...state.data.slice(itemImportant + 1)\n            ]\n            return {\n                ...state,\n                data: newArr\n            }\n        case 'ADD_URGENT_POST':\n            const inx = action.payload;\n            const itemUrgent = state.data.findIndex(item => item.id === inx)\n            const oldItem = state.data[itemUrgent]\n            const newUrgent = {...oldItem, urgent: !oldItem.urgent};\n            const newArray = [\n                ...state.data.slice(0, itemUrgent), newUrgent, ...state.data.slice(itemUrgent + 1)\n            ]\n            return {\n                ...state,\n                data: newArray\n            }\n        case 'TO_COMPLETE':\n            const idc = action.payload;\n            const itemCompleted = state.data.findIndex(item => item.id === idc)\n            const oldCompleted = state.data[itemCompleted]\n            const newCompleted = {...oldCompleted, completed: !oldCompleted.completed};\n            const newArrayCompleted = [\n                ...state.data.slice(0, itemCompleted), newCompleted, ...state.data.slice(itemCompleted + 1)\n            ]\n            return {\n                ...state,\n                data: newArrayCompleted\n            }\n        case 'SEARCH_POST':\n            const filter = [...state.data].filter(item => item.body.toLowerCase().includes(state.search.toLowerCase()))\n            return {\n                ...state,\n                search: action.payload,\n                filterPost: filter,\n                filter: 'all'\n            }\n        case 'FILTERED':\n            const filtr = action.payload;\n            let term \n            if(action.payload === 'all'){\n                term = state.data;\n            }\n            if(filtr === 'important'){\n                term = state.data.filter(item => item.important);\n            }\n            if(filtr === 'urgent'){\n                term = state.data.filter(item => item.urgent);\n            }\n\n            return {\n                ...state,\n                filter: action.payload,\n                filterArr: term,\n                \n            }  \n        default: return state\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {createStore} from 'redux';\nimport reducer from './reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer, composeWithDevTools());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}